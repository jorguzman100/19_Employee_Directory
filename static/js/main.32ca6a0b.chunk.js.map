{"version":3,"sources":["components/Header.js","components/Row.js","components/Col.js","components/Card.js","components/Search.js","components/TRow.js","components/Table.js","components/Map/Map.js","components/Map/mapStyles.js","utils/API.js","components/Main.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","role","aria-label","Row","props","children","Col","Card","title","Search","type","placeholder","name","value","onChange","handleInputChange","onClick","handleFormSubmit","TRow","handleSelectRow","dataid","alt","firstName","lastName","src","picture","email","dob","address","city","mobile","Table","console","log","results","href","data-value","handleSortBtnClick","map","result","index","key","id","thumbnail","first","last","date","slice","location","street","number","cell","libraries","mapContainerStyle","width","height","center","lat","lng","options","styles","disableDefaultUI","zoomControl","Map","useLoadScript","googleMapsApiKey","process","isLoaded","loadError","React","useState","markers","setMarkers","selected","setSelected","onMapClick","useCallback","event","current","latLng","time","Date","getEmployeeMarkers","employee","mapRef","useRef","onMapLoad","panTo","setZoom","Locate","EmployeeMarker","zoom","onLoad","marker","toISOString","position","icon","url","scaledSize","window","google","maps","Size","origin","Point","anchor","onCloseClick","formatRelative","usePlacesAutocomplete","requestOptions","radius","ready","suggestions","status","data","setValue","clearSuggestions","onSelect","a","getGeocode","getLatLng","e","target","disabled","description","forEach","country","geoResults","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","fullUrl","baseUrl","axios","get","Main","state","filteredResults","selectedResult","order","search","searchEmployees","query","API","then","res","setState","catch","err","toLowerCase","filter","includes","preventDefault","sortType","attributes","getNamedItem","objLevel1","objLevel2","sort","b","this","Component","Footer","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.32ca6a0b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n    return (\n        <header className=\"App-header\">\n            <div className=\"sticky-top bg-info text-white text-center py-2\">\n                <h3><span role=\"img\" aria-label=\"employee emoji\">👩🏻‍💼👨🏻‍💼</span> Employee Directory</h3>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nconst Row = (props) => {\n    return (\n        <div className='row'>{props.children}</div>\n    );\n}\n\nexport default Row;","import React from 'react';\n\nconst Col = (props) => {\n    return (\n        <div className='col'>{props.children}</div>\n    );\n}\n\nexport default Col;","import React from 'react';\n\nconst Card = (props) => {\n    return (\n        <div className=\"card mt-4\">\n            <div className=\"card-header py-1 px-3\">\n                {props.title}\n            </div>\n            <div className=\"card-body\">\n                {props.children}\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\n\nconst Search = (props) => {\n    return (\n        <div className=\"input-group mb-3\">\n            <input className=\"form-control\" type=\"text\" placeholder=\"Find name, email, DOB, address, city, or mobile\" name=\"search\" value={props.value} onChange={props.handleInputChange}/>\n            <div className=\"input-group-append\">\n                <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={props.handleFormSubmit}>Search</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Search;\n\n\n\n\n\n\n","import React from 'react';\n\nconst TRow = (props) => {\n    return (\n        <tr onClick={props.handleSelectRow} dataid={props.dataid}>\n            <td dataid={props.dataid}><img alt={`${props.firstName} ${props.lastName}`} className=\"img-fluid picture\" src={props.picture} dataid={props.dataid} /></td>\n            <td dataid={props.dataid}>{`${props.firstName} ${props.lastName}`}</td>\n            <td dataid={props.dataid}>{props.email}</td>\n            <td dataid={props.dataid}>{props.dob}</td>\n            <td dataid={props.dataid}>{props.address}</td>\n            <td dataid={props.dataid}>{props.city}</td>\n            <td dataid={props.dataid}>{props.mobile}</td>\n        </tr>\n    );\n}\n\nexport default TRow;\n\n","import React from 'react';\nimport TRow from './TRow';\nimport TH from './TH';\n\nconst Table = (props) => {\n    console.log('Table()');\n    console.log('props.results: ', props.results);\n\n    return (\n        <div className=\"table-responsive\">\n            <table className=\"table table-hover\">\n                <thead>\n                    <tr>\n                        <th>Picture</th>\n                        <th>Name {\" \"}\n                            <a href='#'>\n                                <i\n                                    className=\"fas fa-sort text-info sortIcon\"\n                                    data-value='Name'\n                                    onClick={props.handleSortBtnClick}\n                                ></i>\n                            </a>\n                        </th>\n                        <th>Email</th>\n                        <th>DOB</th>\n                        <th>Address</th>\n                        <th>City {\" \"}\n                             <a href='#'>\n                                <i\n                                    className=\"fas fa-sort text-info sortIcon\"\n                                    data-value='City'\n                                    onClick={props.handleSortBtnClick}\n                                ></i>\n                            </a>\n                        </th>\n                        <th>Cell</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.results.map((result, index) => {\n                        return (\n                            <TRow\n                                key={index}\n                                dataid={result.id.value}\n                                picture={result.picture.thumbnail}\n                                firstName={result.name.first}\n                                lastName={result.name.last}\n                                email={result.email}\n                                dob={result.dob.date.slice(0, 10)}\n                                address={`${result.location.street.number} ${result.location.street.name}`}\n                                city={result.location.city}\n                                mobile={result.cell}\n                                handleSelectRow={props.handleSelectRow}\n                            />\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Table;\n","import React, { useState } from \"react\";\nimport mapStyles from './mapStyles'\n\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\n\nimport { formatRelative } from \"date-fns\";\n\nimport usePlacesAutocomplete, {\n  getGeocode,\n  getLatLng,\n} from \"use-places-autocomplete\";\n\nimport {\n  Combobox,\n  ComboboxInput,\n  ComboboxPopover,\n  ComboboxList,\n  ComboboxOption,\n} from \"@reach/combobox\";\n\nimport \"@reach/combobox/styles.css\";\n\n/* import mapStyles from \"./mapStyles\"; */\n\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: '100%',\n  height: '30vh'\n};\nconst zoom = 3;\nconst center = {\n  lat: 37.0902,\n  lng: -95.7129\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true, // desable Google Maps default UI controls\n  zoomControl: true\n}\n\n\n\nconst Map = (props) => {\n  // Load the Google Map when the component is mounted\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries,\n  });\n\n  // Create marker for the selectedResult\n  /* const markSelected = React.useCallback(async (employee) => {\n    let address = `${props.selectedResult.location.city} ${props.selectedResult.location.country}`;\n    let picture = props.selectedResult.picture.thumbnail;\n    console.log('In markSelected()');\n    console.log('Name: ', props.selectedResult.name.first);\n    console.log('adress: ', address);\n\n    try {\n      const geoResults = await getGeocode({ address });\n      const { lat, lng } = await getLatLng(geoResults[0]);\n      console.log('geoResults[0]: ', geoResults[0]);\n      console.log('lat, lng: ', lat, lng);\n      getEmployeeMarkers({ lat, lng, picture });\n    } catch (error) {\n      console.log(error);\n    }\n  });\n  if (props.selectedResult) {\n    markSelected();\n  } */\n  \n\n  // useState hook to define the markers and its setter - causes re-render\n  const [markers, setMarkers] = React.useState([]); // map onClick\n\n  // state for the details window once a marker is selected\n  const [selected, setSelected] = useState(null);\n  const onMapClick = React.useCallback((event) => {\n    setMarkers((current) => [...current, {\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng(),\n      time: new Date(),\n      picture: '/markerIcon.svg'\n    },\n    ]);\n    /* console.log('GoogleMap event', event);\n    console.log('markers', markers); */\n  });\n\n  // Get the employee markers\n  const getEmployeeMarkers = React.useCallback((employee) => {\n    setMarkers((current) => [...current, {\n      lat: employee.lat,\n      lng: employee.lng,\n      time: new Date(),\n      picture: employee.picture\n    },\n    ]);\n  });\n\n  // useRef keeps a state without causing re-renders\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  // Re-position the map to the provided lat and lng\n  const panTo = React.useCallback(({ lat, lng }) => {\n    mapRef.current.panTo({ lat, lng });\n    mapRef.current.setZoom(10);\n  }, [])\n\n  if (loadError) return \"Error loading Maps\";\n  if (!isLoaded) return \"Loading Maps...\";\n\n  return (\n    <div>\n      {/* <div className='mapText'>Editable map text </div> */}\n\n      {/* The Search */}\n      <Search panTo={panTo} />\n\n      {/* The Geolocation */}\n      <Locate panTo={panTo} />\n\n      {/* Get the employee markers */}\n      <EmployeeMarker\n        results={props.results}\n        getEmployeeMarkers={getEmployeeMarkers}\n      />\n\n\n      <GoogleMap\n        mapContainerStyle={mapContainerStyle}\n        zoom={zoom}\n        center={center}\n        options={options}\n        // Add markers after the user clicks on the map\n        onClick={onMapClick}\n        onLoad={onMapLoad}\n      >\n        {/* Show the markers on the map*/}\n        {markers.map(marker => (\n          <Marker\n            key={marker.time.toISOString()}\n            position={{ lat: marker.lat, lng: marker.lng }}\n\n            // change the marker icon\n            icon={{\n              url: marker.picture,\n              scaledSize: new window.google.maps.Size(20, 20),\n              origin: new window.google.maps.Point(0, 0),\n              anchor: new window.google.maps.Point(10, 10)\n            }}\n            onClick={() => {\n              setSelected(marker);\n            }}\n          />\n        ))}\n\n        {/* Show the window on the selected marker */}\n        {selected ? (\n          <InfoWindow\n            position={{ lat: selected.lat, lng: selected.lng }}\n\n            // Allow relaunch of the window after the \"x\" close button is clicked\n            onCloseClick={() => {\n              setSelected(null);\n            }}\n          >\n            <div>\n              <p>Employee selected</p>\n              <p>Spotted {formatRelative(selected.time, new Date())}</p>\n            </div>\n          </InfoWindow>\n        ) : null}\n      </GoogleMap>\n    </div>\n  );\n}\n\nexport default Map;\n\n\n\nconst Search = ({ panTo }) => {\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: { lat: () => 43.6532, lng: () => -79.3832 },\n      radius: 100 * 1000,\n    },\n  });\n\n  return (\n    <div className='mapSearch'>\n      <Combobox\n        onSelect={async (address) => {\n          console.log('address: ', address);\n\n          // Update state and avoid keep showing the search popover in the search input\n          setValue(address, false);\n          clearSuggestions();\n          try {\n            const results = await getGeocode({ address });\n            const { lat, lng } = await getLatLng(results[0]);\n            panTo({ lat, lng });\n            console.log('geoCode results[0]: ', results[0]);\n            console.log('lat, lng: ', lat, lng);\n          } catch (error) {\n            console.log(error);\n          }\n        }}\n      >\n        <ComboboxInput\n          value={value}\n          onChange={(e) => {\n            setValue(e.target.value)\n          }}\n          disabled={!ready}\n          placeholder={'Enter an address'}\n        />\n        <ComboboxPopover>\n          {status === 'OK' &&\n            data.map(({ id, description }) => (\n              <ComboboxOption key={id} value={description} />\n            ))\n          }\n        </ComboboxPopover>\n      </Combobox>\n    </div>\n  )\n}\n\nfunction EmployeeMarker(props) {\n  return (\n    <button\n      className=\"mapEmployeeIcon\"\n      onClick={() => {\n        console.log('EmployeeMarker()');\n\n        props.results.forEach(async (result) => {\n          let address = `${result.location.city} ${result.location.country}`;\n          let picture = result.picture.thumbnail;\n          console.log('adress: ', address);\n\n          try {\n            const geoResults = await getGeocode({ address });\n            const { lat, lng } = await getLatLng(geoResults[0]);\n            console.log('geoResults[0]: ', geoResults[0]);\n            console.log('lat, lng: ', lat, lng);\n            props.getEmployeeMarkers({ lat, lng, picture });\n          } catch (error) {\n            console.log(error);\n          }\n\n          /* setMarkers((current) => [...current, {\n            lat: result.location.coordinates.latitude,\n            lng: result.location.coordinates.longitude,\n            time: new Date(),\n          },\n          ]);\n          console.log('markers', markers); */\n        });\n      }}\n    >\n      <img src=\"/employeeImage.svg\" alt=\"employees\" />\n    </button>\n  );\n}\n\n\n\nfunction Locate({ panTo }) {\n  return (\n    <button\n      className=\"mapLocate\"\n      onClick={() => {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            panTo({\n              lat: position.coords.latitude,\n              lng: position.coords.longitude,\n            });\n          },\n          () => null\n        );\n      }}\n    >\n      {/* <img src=\"/compassIcon.svg\" alt=\"compass\" /> */}\n      <i className=\"fas fa-street-view text-info\"></i>\n    </button>\n  );\n}\n\n/* function Search({ panTo }) {\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: { lat: () => 43.6532, lng: () => -79.3832 },\n      radius: 100 * 1000,\n    },\n  });\n\n  // https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\n\n  const handleInput = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSelect = async (address) => {\n    setValue(address, false);\n    clearSuggestions();\n\n    try {\n      const results = await getGeocode({ address });\n      const { lat, lng } = await getLatLng(results[0]);\n      panTo({ lat, lng });\n    } catch (error) {\n      console.log(\"😱 Error: \", error);\n    }\n  };\n\n  return (\n    <div className=\"search\">\n      <Combobox onSelect={handleSelect}>\n        <ComboboxInput\n          value={value}\n          onChange={handleInput}\n          disabled={!ready}\n          placeholder=\"Search your location\"\n        />\n        <ComboboxPopover>\n          <ComboboxList>\n            {status === \"OK\" &&\n              data.map(({ id, description }) => (\n                <ComboboxOption key={id} value={description} />\n              ))}\n          </ComboboxList>\n        </ComboboxPopover>\n      </Combobox>\n    </div>\n  );\n} */\n","export default [\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"saturation\": \"-100\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"labels\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n            {\n                \"color\": \"#545454\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"saturation\": \"-87\"\n            },\n            {\n                \"lightness\": \"-40\"\n            },\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway.controlled_access\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#f0f0f0\"\n            },\n            {\n                \"saturation\": \"-22\"\n            },\n            {\n                \"lightness\": \"-16\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway.controlled_access\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway.controlled_access\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"saturation\": \"-52\"\n            },\n            {\n                \"hue\": \"#00e4ff\"\n            },\n            {\n                \"lightness\": \"-16\"\n            }\n        ]\n    }\n]","import axios from \"axios\";\nconst baseUrl = \"https://randomuser.me/api/?\";\nlet numberOfResults = 'results=200';\nlet nationalities = 'nat=us';\n\nlet fullUrl = `${baseUrl+numberOfResults}&${nationalities}`;\n\nexport default {\n    search: function () {\n        // console.log('query: ', query);\n    return axios.get(fullUrl);\n  }\n};\n","import React, { Component } from 'react';\nimport Row from './Row';\nimport Col from './Col';\nimport Card from './Card';\nimport Search from './Search'\nimport Table from './Table';\nimport Map from './Map/Map';\nimport API from '../utils/API';\n\n\nclass Main extends Component {\n    state = {\n        results: [],\n        filteredResults: [],\n        selectedResult: {},\n        order: 'ascend',\n        search: \"\"\n    };\n\n    componentDidMount() {\n        this.searchEmployees();\n    }\n\n    searchEmployees = (query) => {\n        API.search(query)\n            .then((res) => {\n                // console.log('res: ', res.data.results);\n                this.setState({\n                    results: res.data.results,\n                    filteredResults: res.data.results\n                });\n            })\n            .catch(err => console.log(err));\n    };\n\n    handleInputChange = event => {\n        const value = event.target.value.toLowerCase();\n        const name = event.target.name;\n        this.setState({\n            [name]: value,\n            filteredResults: this.state.results.filter((result) => {\n                let compareData = `\n                ${result.name.first} \n                ${result.name.last} \n                ${result.email} \n                ${result.dob.date.slice(0, 10)} \n                ${result.location.street.number} \n                ${result.location.street.name} \n                ${result.location.city} \n                ${result.cell}\n                `;\n                if (compareData.toLowerCase().includes(value)) {\n                    return result;\n                }\n            })\n        });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        this.searchEmployees(this.state.search);\n    };\n\n    /* \n    \"JavaScript Problem: Sorting an Array of Objects\"\n    Source: https://www.youtube.com/watch?v=0d76_2sksWY\n    */\n    handleSortBtnClick = event => {\n        const sortType = event.target.attributes.getNamedItem(\"data-value\").value.toLowerCase();\n        console.log('sortType: ', sortType);\n        let objLevel1 = 'name';\n        let objLevel2 = 'first';\n\n        if (sortType === 'name') {\n            objLevel1 = 'name';\n            objLevel2 = 'first';\n        } else if (sortType === 'city') {\n            objLevel1 = 'location';\n            objLevel2 = 'city';\n        }\n\n        if (this.state.order === 'ascend') {\n            this.setState({\n                filteredResults: this.state.filteredResults.sort((a, b) => {\n                    if (a[`${objLevel1}`][`${objLevel2}`].toLowerCase() < b[`${objLevel1}`][`${objLevel2}`].toLowerCase()) return -1;\n                    else if (a[`${objLevel1}`][`${objLevel2}`].toLowerCase() > b[`${objLevel1}`][`${objLevel2}`].toLowerCase()) return 1;\n                    else return 0;\n                }),\n                order: 'descend'\n            });\n        } else {\n            this.setState({\n                filteredResults: this.state.filteredResults.sort((a, b) => {\n                    if (a[`${objLevel1}`][`${objLevel2}`].toLowerCase() > b[`${objLevel1}`][`${objLevel2}`].toLowerCase()) return -1;\n                    else if (a[`${objLevel1}`][`${objLevel2}`].toLowerCase() < b[`${objLevel1}`][`${objLevel2}`].toLowerCase()) return 1;\n                    else return 0;\n                }),\n                order: 'ascend'\n            });\n        }\n    };\n\n\n    handleSelectRow = (event) => {\n        //selectedResult:\n        console.log('event.target: ', event.target);\n        console.log('id: ', event.target.attributes.getNamedItem('dataid').value);\n        let dataid = event.target.attributes.getNamedItem('dataid').value;\n        this.setState({\n            selectedResult: this.state.filteredResults.filter((result) => {\n                if (result.id.value === dataid) {\n                    return result\n                }\n            })\n        });\n        console.log('selectedResult: ', this.state.selectedResult);\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Row>\n                    <Col>\n                        <Card title='Search'>\n                            <Search\n                                value={this.state.search}\n                                handleInputChange={this.handleInputChange}\n                                handleFormSubmit={this.handleFormSubmit} />\n                        </Card>\n                    </Col>\n                    <Col>\n                        <Card title={'Locations 🌍'}>\n                            <Map\n                                results={this.state.filteredResults}\n                                selectedResult={this.state.selectedResult}\n                            />\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Card title='Details'>\n                            <Table\n                                results={this.state.filteredResults}\n                                handleSortBtnClick={this.handleSortBtnClick}\n                                handleSelectRow={this.handleSelectRow}\n                            />\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        )\n    };\n}\n\nexport default Main;\n\n\n\n\n\n\n","import React from 'react';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <div className=\"fixed-bottom bg-info text-white p-1\">\n                <p className=\"m-0\">Copyright @ 2020 Company</p>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\n\n// Components\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <Main />\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}